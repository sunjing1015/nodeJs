前后端分离
    1、前端创建数据，不需要等待后台
    2、前端可以发布项目  ftp filezilla       <--- 服务器上传工具
    各执其职

$.ajax({
    url:"127.0.0.1:3000/login",
    type:"post",    //get   post    put     delete      push     options
    data:{
        username:"",
        password:""
    },
    dataType:"json",
    async:false,         //true异步      false同步
    timeout:2000
}).done(function(result){

})
window.location.href        hash #跳转   search ?跳转  port 端口 path 路径 pathName 路径名称 host 主机


deno 是  node的替代品


nodejs
作者：Ryan Dahl
引擎Chrome V8
node特点
1、单线程
2、非阻塞I/O
3、事件驱动
node是基于javascript并运行在chrome V8引擎的运行环境


amd和cmd的区别
nodejs包管理工具 npm



淘宝镜像
$ npm install -g cnpm
--registry=https://registry.npm.taobao.org
缺点：导致缺失文件
优点：下载速度快

npm install nrm -g      install 安装依赖    -g  glo

nrm：    是npm的管理工具    作用：可以自由选择包管理工具
nrm use  管理名称    可以自由切换


1.1程序 进程 线程
程序：由源代码生成的可执行应用 (多个代码段组成)

进程：一个正在执行的程序可以看作一个进程,进程拥有独立运行所需要的全部资源

线程：程序中独立运行的代码段

一个进程是由一或多个线程组成，进程只负责资源的调度和分配，线程才是程序真正的执行单元，负责代码的执行

单线程
每个正在运行的程序，至少有一个线程，这个线程叫主线程
只有一个主线程的程序，叫做单线程程序
主线程负责所有代码，这些代码只能按顺序执行，不能并发执行

单线程和多线程的区别
单线程程序：只有一个线程，代码按顺序执行，容易出现代码阻塞(页面假死)
多线程程序：有多个线程，线程间独立运行，能避免代码阻塞，并提高程序的运行性能


I/O input输入/output输出
阻塞式I/O指的是“一旦输入/输出工作没有完成，则进程阻塞，知道输入/输出工作完成”

非阻塞I/O的缺点：
会造成资源的浪费


navigator.userAgent     userAgent 属性是一个只读的字符串，声明了浏览器用于 HTTP 请求的用户代理头的值。

状态码：


     1xx Informational 信息化 (3)
     '100': 'Continue',                             继续
     '101': 'Switching Protocols',                  切换协议
     '102': 'Processing',                           处理将被继续执行

     2xx Success 成功 (10)
     '200': 'OK',                                   客户端请求成功
     '201': 'Created',                              已创建
     '202': 'Accepted',                             已接受
     '203': 'Non-Authoritative Information',        非授权信息
     '204': 'No Content',                           无内容
     '205': 'Reset Content',                        重置内容
     '206': 'Partial Content',                      部分内容
     '207': 'Multi-Status',                         多状态
     '208': 'Already Reported',                     已报告
     '226': 'IM Used',                              使用的

     3xx Redirection 重定向 (8)
     '300': 'Multiple Choices',                     多种选择
     '301': 'Moved Permanently',                    永久移动
     '302': 'Found',                                发现
     '303': 'See Other',                            查看其它
     '304': 'Not Modified',                         未修改
     '305': 'Use Proxy',                            使用代理
     '307': 'Temporary Redirect',                   临时重定向
     '308': 'Permanent Redirect',                   永久重定向

     4xx Client Error 客户端错误 (29)
     '400': 'Bad Request',                          错误的请求
     '401': 'Unauthorized',                         未授权
     '402': 'Payment Required',                     需要付费
     '403': 'Forbidden',                            拒绝访问
     '404': 'Not Found',                            未找到
     '405': 'Method Not Allowed',                   不允许的方法
     '406': 'Not Acceptable',                       不可接受
     '407': 'Proxy Authentication Required',        代理服务器需要身份验证
     '408': 'Request Timeout',                      请求超时
     '409': 'Conflict',                             冲突
     '410': 'Gone',                                 已删除
     '411': 'Length Required',                      需要长度
     '412': 'Precondition Failed',                  前提条件失败
     '413': 'Payload Too Large',                    负载过大
     '414': 'URI Too Long',                         请求的URI过长
     '415': 'Unsupported Media Type',               不支持的媒体类型
     '416': 'Range Not Satisfiable',                客户端请求的范围无效
     '417': 'Expectation Failed',                   预期失败
     '418': 'I\'m a teapot',                        我是一个茶壶
     '421': 'Misdirected Request',                  误导请求
     '422': 'Unprocessable Entity',                 无法处理的实体
     '423': 'Locked',                               锁定
     '424': 'Failed Dependency',                    错误接洽关系
     '425': 'Unordered Collection',                 无序集合
     '426': 'Upgrade Required',                     进级请求
     '428': 'Precondition Required',                所需的先决条件
     '429': 'Too Many Requests',                    太多的请求
     '431': 'Request Header Fields Too Large',      请求头字段太大
     '451': 'Unavailable For Legal Reasons',        因法律原因而被官方审查

     5xx Server Error 服务器错误 (12)
     '500': 'Internal Server Error',                内部服务器错误
     '501': 'Not Implemented',                      未执行
     '502': 'Bad Gateway',                          错误的网关
     '503': 'Service Unavailable',                  服务不可用
     '504': 'Gateway Timeout',                      网关超时
     '505': 'HTTP Version Not Supported',           不支持HTTP版本
     '506': 'Variant Also Negotiates',              变体协商
     '507': 'Insufficient Storage',                 存储空间不足
     '508': 'Loop Detected',                        检测到循环
     '509': 'Bandwidth Limit Exceeded',             超出带宽限制
     '510': 'Not Extended',                         不可拓展
     '511': 'Network Authentication Required'       网络需要身份验证


     箭头函数的优点
     this不会被改变


     //引用http模块 require 加载
     var http = require("http");
     var server = http.createServer((req,res)=>{
          //形参 和 实参  arguments
          //req => request 请求  res => response 响应
          //设置响应头   状态码 设置类型        html类型      编码格式
          res.writeHead(200,{"Content-type":"text/html;charst=UTF-8"}
          //结束相应
          res.end("hello word 中国")
     })
     //监听服务     端口      ip
     server.listen(3000,"localhost");

        svn         小乌龟
     上传github       可视化工具   sourcetree
     git init 初始化
     git status 状态
     git add 文件名    添加到暂存区
     git commit -m ""   提交  -m  解释
     git remote         链接远程仓库
     git push -u origin master  提交到仓库中

     今日完成内容：
            233333
     不足：

     措施：

     明日工作安排：
            2018/09/04